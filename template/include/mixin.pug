mixin _breadcrumb(includeIndex, ...links)
  nav.breadcrumb(aria-label='Breadcrumb')
    ul
      if includeIndex
        li: a(href=`${root}index.html`) Index
      - for (let i=0; i < links.length; i+=2)
        if i+1 < links.length
          li: a(href=links[i])= links[i+1]
        else
          li= links[i]

mixin breadcrumb(...links)
  +_breadcrumb(true, ...links)

mixin breadcrumbWithoutIndex(...links)
  +_breadcrumb(false, ...links)

mixin _pageLink(page)
  a.page-link(href=`${root}page/${page.aliasOrId}.html`): block

mixin pageLink(pageOrAliasOrId)
  if typeof(pageOrAliasOrId) != 'string'
    +_pageLink(pageOrAliasOrId)= pageOrAliasOrId.name
  else if pageIndex[pageOrAliasOrId]
    +pageLink(pageIndex[pageOrAliasOrId])
  else
    = pageOrAliasOrId
    | 
    | (missing)

mixin pageLinkWithDetails(pageOrAliasOrId, skipCreator=false)
  if typeof(pageOrAliasOrId) != 'string'
    - let page = pageOrAliasOrId
    - let summary = page.renderSummary(pageIndex)
    if page.type == 'comment' && summary
      +_pageLink(page): q=summary
    else
      +_pageLink(page)= page.name
      if summary
        | 
        q= summary
    if !skipCreator && page.pageCreatorId && page.pageCreatorId != page.pageId
      = ' - '
      +pageLink(page.pageCreatorId)
  else if pageIndex[pageOrAliasOrId]
    +pageLinkWithDetails(pageIndex[pageOrAliasOrId])
  else
    +pageLink(pageOrAliasOrId)

mixin pageTree(pages)
  - pages = Array.from(pages).map(p=>pageIndex[p]||p)
  - pages = lib.sortBy(pages, p=>typeof(p)=='string'?p:p.name)
  ul.page-tree
    each page in pages
      li
        +pageLinkWithDetails(page || aliasOrId)
        if typeof(page) != 'string' && page.childIds.length > 0
          +pageTree(page.childIds)

mixin pageList(pages, skipCreator=false)
  - pages = Array.from(pages).map(p=>pageIndex[p]||p)
  - pages = lib.sortBy(pages, p=>typeof(p)=='string'?p:p.name)
  ul.page-list
    each page in pages
      li: +pageLinkWithDetails(page, skipCreator)

mixin pageListByType(pages, hLevel, idPrefix, skipCreator=false)
  - let pagesByType = lib.makePagesByType(pages, pageIndex)
  if pagesByType.length <= 1
    +pageList(pages, skipCreator)
  else
    - for (let [type, pages] of pagesByType)
      #{`h${hLevel}`}(id=idPrefix+type)= type
      +pageList(pages, skipCreator)

mixin pageCommaList(pages)
  - pages = Array.from(pages).map(p=>pageIndex[p]||p)
  - pages = lib.sortBy(pages, p=>typeof(p)=='string'?p:p.name)
  if pages.length > 0
    span.page-comma-list
      +pageLink(pages[0])
      - for (let i=1; i<pages.length; i++)
        | ,
        | 
        +pageLink(pages[i])
